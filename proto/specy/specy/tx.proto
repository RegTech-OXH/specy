syntax = "proto3";
package specy.specy;

// this line is used by starport scaffolding # proto/tx/import
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "specy/x/specy/types";

// Msg defines the Msg service.
service Msg {
      rpc CreateExecutor(MsgCreateExecutor) returns (MsgCreateExecutorResponse);
  rpc CreateTask(MsgCreateTask) returns (MsgCreateTaskResponse);
  rpc ExecuteTask(MsgExecuteTask) returns (MsgExecuteTaskResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateExecutor {
  string creator = 1;
  cosmos.base.v1beta1.Coin staking = 2 [(gogoproto.nullable) = false];
  string iasAttestationReport = 3;
  string enclavePk = 4;
}

message MsgCreateExecutorResponse {
}

message MsgCreateTask {
  string creator = 1;
  string contractAddress = 2;
  string method = 3;
  string calldata = 4;
  bool single = 5;
  string ruleFile = 6;
}

message MsgCreateTaskResponse {
}

message MsgExecuteTask {
  string creator = 1;
  string taskHash = 2;
  string calldata = 3;
}

message MsgExecuteTaskResponse {
}

// this line is used by starport scaffolding # proto/tx/message
